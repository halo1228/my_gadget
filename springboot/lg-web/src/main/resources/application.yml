server:
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 100
    threads:
      # tomcat最大线程数，默认为200
      max: 200
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 10

# 数据源配置
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher #swwagger
  # 数据源配置
  datasource:
    # @DS 可以注解在方法上和类上，同时存在方法注解优先于类上注解,强烈建议注解在service实现或mapper接口方法上
    dynamic:
      # 默认数据源，默认master
      primary: master
      # 严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      strict: false
      # 数据库连接信息配置
      datasource:
        # 主库
        master:
          url: jdbc:mysql://127.0.0.1:3306/my_gadget?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useSSL=true&characterEncoding=UTF-8
          username: root
          password: 123456
        # 从库
        slave:
          url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useSSL=true&characterEncoding=UTF-8
          username: root
          password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    #url: jdbc:mysql://localhost:3306/my_gadget?characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    #username: root
    #password: 123456
    druid:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
        url-pattern: /*                 # 过滤所有url
        exclusions: "/druid/*" # 排除一些不必要的url
        session-stat-enable: true       # 开启session统计功能
        session-stat-max-count: 1000    # session的最大个数,默认100
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: admin
        login-password: 123456
        reset-enable: false  #是否启用重置按钮
      filter:
        #配置StatFilter (SQL监控配置)
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true # 开启慢SQL记录功能
          slow-sql-millis: 1000
          merge-sql: true
        #配置WallFilter (防火墙配置)
        wall:
          enabled: true
          config:
            multi-statement-allow: true
            drop-table-allow: false                                                   #禁止删表操作
      aop-patterns: "com.lg.*"

  # Redis 配置
  redis:
    # Redis 服务器地址
    host: 127.0.0.1
    # 连接端口号
    port: 6379
    # 数据库索引（0 - 15）
    database: 0
    # 连接超时时间（毫秒）
    timeout: 10000
    # lettuce 参数
    lettuce:
      pool:
        # 最大连接数(使用负值表示没有限制) 默认为 8
        max-active: 10
        # 最大阻塞等待时间(使用负值表示没有限制) 默认为 -1 ms
        max-wait: -1
        # 最大空闲连接 默认为 8
        max-idle: 5
        # 最小空闲连接 默认为 0
        min-idle: 0
# mybatis plus
mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: deleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略实体类字段上加上@TableLogic注解)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  configuration:
    # 关闭自动驼峰转换
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # SQL日志打印
    call-setters-on-nulls: true
  mapper-locations: classpath*:/mappers/**/*.xml,classpath*:/mapper/**/*.xml

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: X-Token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: random-32
  # 是否输出操作日志
  is-log: true
swagger:
  enabled: true #swagger 开启

# mica-xss防止Xss攻击
#mica:
#  xss:
#    enabled: false
#    path-patterns: /**
